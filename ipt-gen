#!/usr/bin/perl -w

############################################################################
###	BEGIN CONFIG SECTION
############################################################################
my $allow_established = 1;												# true
my @tcp_open_ports = qw( 22 25 80 443 );
my @udp_open_ports = qw( );
my $allow_icmp = 0;														# false
my $allow_icmp_limit = 0;
my $allow_icmp_limit_period = "sec";
my $log_drops = 1;														# true
my $allow_loopback = 1;													# true
my $logging_enabled = 1;												# true
my $logging_prefix_string = "iptables-input-denied: ";
my $logging_limit = 0;
my $logging_limit_period = "sec";
############################################################################
###	END CONFIG SECTION
############################################################################

use strict;
use warnings;

use Data::Dumper;
use Term::ANSIColor;

my @rules_list = qw();
my $iptables = '/sbin/iptables';
my $ip6tables = '/sbin/ip6tables';

if ($allow_established) {
	push @rules_list, "$iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT";
}
foreach my $p ( @tcp_open_ports ) {
	push @rules_list, "$iptables -A INPUT -p tcp -m tcp --dport $p -j ACCEPT";
}
foreach my $p ( @udp_open_ports ) {
	push @rules_list, "$iptables -A INPUT -p udp -m udp --dport $p -j ACCEPT";
}
if ($allow_icmp) {
	if ($allow_icmp_limit > 0) {
		push @rules_list, "$iptables -A INPUT -p icmp -m limit --limit $allow_icmp_limit/$allow_icmp_limit_period -j ACCEPT";
		push @rules_list, "$iptables -A INPUT -p icmp -j DROP";
	} else {
		push @rules_list, "$iptables -A INPUT -p icmp -j ACCEPT";
	}
}
if ($allow_loopback) {
	push @rules_list, "$iptables -A INPUT -i lo -j ACCEPT";
	push @rules_list, "$iptables -A OUTPUT -o lo -j ACCEPT";
}
if ($logging_enabled) {
	if ($logging_limit > 0) {
		unless ($logging_limit_period =~ /^(?:min|sec)$/) {
			die colored("Unacceptable logging limit period.  Must be \"min\" or \"sec\". \n", "bold red");
		}
		push @rules_list, "$iptables -A INPUT -m limit --limit $logging_limit/$logging_limit_period -j LOG --log-prefix \"$logging_prefix_string\"";
	} else  {
		push @rules_list, "$iptables -A INPUT -j LOG --log-prefix \"$logging_prefix_string\"";
	}
}
	
	
###########################################################################
print "These are the rules I have so far: \n";
print join("\n", @rules_list);
print "\n";

